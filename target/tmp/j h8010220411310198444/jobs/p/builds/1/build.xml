<?xml version='1.0' encoding='UTF-8'?>
<flow-build>
  <actions>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction>
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <hudson.plugins.sonar.action.SonarMarkerAction/>
    <hudson.plugins.sonar.action.SonarAnalysisAction>
      <installationName>default</installationName>
      <ceTaskId>fakeTaskId1</ceTaskId>
      <url>http://localhost:41893/sonarqube/dashboard</url>
      <serverUrl>http://localhost:41893/sonarqube</serverUrl>
      <isNew>true</isNew>
      <isSkipped>false</isSkipped>
    </hudson.plugins.sonar.action.SonarAnalysisAction>
  </actions>
  <queueId>59</queueId>
  <timestamp>1557994440651</timestamp>
  <startTime>1557994440653</startTime>
  <duration>0</duration>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>node {
  dir(path: &apos;project1&apos;) {
    withSonarQubeEnv {
      writeFile file: &apos;foo/report-task.txt&apos;, text: &apos;dashboardUrl=http://localhost:41893/sonarqube/dashboard\nceTaskId=fakeTaskId1\nserverUrl=http://localhost:41893/sonarqube\nprojectKey=foo&apos;, encoding: &apos;utf-8&apos;
      sh &apos;mvn -version&apos;
    }
  }
}
def qg1 = waitForQualityGate();
if (qg1.status != &apos;OK&apos;) {
  error &apos;QG1 failure&apos;
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>9658185</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>7269640</long>
      </entry>
      <entry>
        <string>run</string>
        <long>93797564</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>26071873</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>15171951</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>17</iota>
    <head>1:17</head>
    <start>2</start>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <logsToCopy class="java.util.concurrent.ConcurrentSkipListMap" serialization="custom">
    <unserializable-parents/>
    <java.util.concurrent.ConcurrentSkipListMap>
      <default/>
      <string>17</string>
      <long>0</long>
      <null/>
    </java.util.concurrent.ConcurrentSkipListMap>
  </logsToCopy>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>